const { prisma } = require("./generated/prisma-client")
const { GraphQLServer } = require("graphql-yoga")

const resolvers = {
  Mutation: {
    // createCourtCase(root, args, context) {
    //   return context.prisma.createCourtCase({
    //     plaintiff: context.prisma.createPlaintiff({
    //       person: context.prisma.createPerson({
    //         firstName: args.firstName,
    //         lastName: args.lastName,
    //       }),
    //     }),
    //   })
    // },
    createPerson(root, args, context) {
      return context.prisma.createPerson({
        firstName: args.firstName,
        lastName: args.lastName,
      })
    },
    createPlaintiff(root, args, context) {
      const person = context.prisma.createPerson({
        firstName: args.firstName,
        lastName: args.lastName,
      })
      console.log("person", person)

      return context.prisma.createPlaintiff({
        person: {
          create: {
            firstName: args.firstName,
            lastName: args.lastName,
          },
        },
      })
    },
  },

  Query: {
    // courtCase(root, args, context) {
    //   return context.prisma.courtCase({ id: "12345" })
    // },
    person(root, args, context) {
      return context.prisma.person({ id: "person12345" })
    },
  },
}

const server = new GraphQLServer({
  typeDefs: "./schema.graphql",
  resolvers,
  context: {
    prisma,
  },
})
server.start(() => console.log("Server is running on http://localhost:4000"))

// publishedPosts(root, args, context) {
//   return context.prisma.posts({ where: { published: true } })
// },
// post(root, args, context) {
//   return context.prisma.post({ id: args.postId })
// },
// postsByUser(root, args, context) {
//   return context.prisma
//     .user({
//       id: args.userId,
//     })
//     .posts()
// },

// Post: {
//   author(root, args, context) {
//     return context.prisma
//       .post({
//         id: root.id,
//       })
//       .author()
//   },
// },

//mutation stuff
// title: args.title,
// author: {
//   connect: { id: args.userId },
// },
//   publish(root, args, context) {
//     return context.prisma.updatePost({
//       where: { id: args.postId },
//       data: { published: true },
//     })
//   },
//   createUser(root, args, context) {
//     return context.prisma.createUser({ name: args.name })
//   },
// },
// },
// Lawyer: {
//   person(lawyer, args, context) {
//     return {}
//     // return context.prisma
//     //   .user({
//     //     id: root.id,
//     //   })
//     //   .posts()
//   },
// },
// Person: {
//   firstName(person, args, context) {
//     return "foo"
//   },
//   lastName(person, args, context) {
//     return "bar"
//   },
// },
