type Mutation {
  # createCourtCase(
  #   plaintiff: Plaintiff! # defendant: Defendant! # lawyer: Lawyer!
  # ): CourtCase

  createPerson(firstName: String!, lastName: String!): Person
  createPlaintiff(person: PersonInput!): Plaintiff
  # createPerson(firstName: String!, lastName: String!): Person
  # createPerson(firstName: String!, lastName: String!): Person
}

type Query {
  # courtCase: CourtCase
  person: Person

  # publishedPosts: [Post!]!
  # post(postId: ID!): Post
  # postsByUser(userId: ID!): [Post!]!
}

# type CourtCase {
#   id: ID!
#   plaintiff: Plaintiff!
#   defendant: Defendant!
#   lawyer: Lawyer!
# }
# input CourtCaseType {
#   plaintiff: Plaintiff!
#   defendant: Defendant!
#   lawyer: Lawyer!
# }
type Person {
  id: ID!
  firstName: String!
  lastName: String!
}
input PersonInput {
  firstName: String!
  lastName: String!
}
# type Lawyer {
#   id: ID!
#   person: Person!
# }

type Plaintiff {
  id: ID!
  person: Person!
}

input PlaintiffInput {
  person: PersonInput!
}

# type Defendant {
#   id: ID!
#   person: Person!
# }

# type User {
#   id: ID!
#   email: String
#   name: String!
#   posts: [Post!]!
# }

# type Post {
#   id: ID!
#   title: String!
#   published: Boolean!
#   author: User
# }
